// ***************************************************************************
// GENERATED:
//   Time:    31-Jul-2017 13:11PM
//   By:      Daniel Hadad
//   Command: origen g subroutines -t dut.rb -e j750.rb
// ***************************************************************************
// ENVIRONMENT:
//   Application
//     Source:    git@github.com:Origen-SDK/origen_testers.git
//     Version:   0.9.6
//     Branch:    match2_keepalive_updates(2862c9d5383) (+local edits)
//   Origen
//     Source:    https://github.com/Origen-SDK/origen
//     Version:   0.7.46
//   Plugins
//     atp:                      0.5.4
//     origen_arm_debug:         0.4.3
//     origen_doc_helpers:       0.4.4
//     origen_jtag:              0.13.0
//     origen_swd:               0.5.0
// ***************************************************************************
import tset tp0;                                                                                
svm_only_file = yes;                                                                            
opcode_mode = extended;                                                                         
compressed = yes;                                                                               
                                                                                                
vector ($tset, tclk, tdi, tdo, tms)                                                             
{                                                                                               
//                                                                                              t t t t
//                                                                                              c d d m
//                                                                                              l i o s
//                                                                                              k      
global subr executefunc1:                                                                       
return                                                           > tp0                          X X X X ;
                                                                 > tp0                          X X X X ;
global subr match_pin:                                                                          
                                                                 > tp0                          X X X X ;
// Wait for a maximum of 5.0us
set_code 100                                                     > tp0                          X X X X ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          X X X X ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          X X X X ;
set_cpu (cpuA cpuB)                                              > tp0                          X X X X ;
loop_here_0: if (flag) jump loop_here_0                          > tp0                          X X X X ;
// Start the match loop
global match_outer_loop_1:                                                                      
loopB 1 ign ifc icc                                              > tp0                          X X X X ;
global match_inner_loop_1:                                                                      
loopA 3 ign ifc icc                                              > tp0                          X X X X ;
// Check if tdo is high
 ign ifc icc                                                     > tp0                          X X H X ;
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          X X X X ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_1 icc ifc                         > tp0                          X X X X ;
clr_flag (fail) icc                                              > tp0                          X X X X ;
// Match loop cycle count = 37
// Loop back around if time remaining
end_loopA match_inner_loop_1 icc                                 > tp0                          X X X X ;
end_loopB match_outer_loop_1 icc                                 > tp0                          X X X X ;
// To get here something has gone wrong, check block again to force a pattern failure
// Check if tdo is high
                                                                 > tp0                          X X H X ;
jump match_loop_end_1 icc                                        > tp0                          X X X X ;
block_0_matched_1:                                                                              
pop_loop icc                                                     > tp0                          X X X X ;
clr_fail                                                         > tp0                          X X X X ;
match_loop_end_1:                                                                               
clr_fail                                                         > tp0                          X X X X ;
return                                                           > tp0                          X X X X ;
                                                                 > tp0                          X X X X ;
global subr match_2pins:                                                                        
                                                                 > tp0                          X X X X ;
// Wait for a maximum of 5.0us
set_code 100                                                     > tp0                          X X X X ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          X X X X ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          X X X X ;
set_cpu (cpuA cpuB)                                              > tp0                          X X X X ;
loop_here_2: if (flag) jump loop_here_2                          > tp0                          X X X X ;
// Start the match loop
global match_outer_loop_3:                                                                      
loopB 1 ign ifc icc                                              > tp0                          X X X X ;
global match_inner_loop_3:                                                                      
loopA 2 ign ifc icc                                              > tp0                          X X X X ;
// Check if tdo is high
 ign ifc icc                                                     > tp0                          X X H X ;
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          X X X X ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_3 icc ifc                         > tp0                          X X X X ;
clr_flag (fail) icc                                              > tp0                          X X X X ;
// Check if tms is high
 ign ifc icc                                                     > tp0                          X X L H ;
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          X X X X ;
// Branch if block condition 1 met
if (pass) jump block_1_matched_3 icc ifc                         > tp0                          X X X X ;
clr_flag (fail) icc                                              > tp0                          X X X X ;
// Match loop cycle count = 74
// Loop back around if time remaining
end_loopA match_inner_loop_3 icc                                 > tp0                          X X X X ;
end_loopB match_outer_loop_3 icc                                 > tp0                          X X X X ;
// To get here something has gone wrong, check block again to force a pattern failure
// Check if tdo is high
// Check if tms is high
                                                                 > tp0                          X X H H ;
jump match_loop_end_3 icc                                        > tp0                          X X X X ;
block_0_matched_3:                                                                              
pop_loop icc                                                     > tp0                          X X X X ;
clr_fail                                                         > tp0                          X X X X ;
jump match_loop_end_3 icc                                        > tp0                          X X X X ;
block_1_matched_3:                                                                              
pop_loop icc                                                     > tp0                          X X X X ;
clr_fail                                                         > tp0                          X X X X ;
match_loop_end_3:                                                                               
clr_fail                                                         > tp0                          X X X X ;
return                                                           > tp0                          X X X X ;
                                                                 > tp0                          X X X X ;
global subr match_done:                                                                         
                                                                 > tp0                          X X X X ;
// Wait for a maximum of 5.0us
set_code 100                                                     > tp0                          X X X X ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          X X X X ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          X X X X ;
set_cpu (cpuA cpuB)                                              > tp0                          X X X X ;
loop_here_4: if (flag) jump loop_here_4                          > tp0                          X X X X ;
// Start the match loop
global match_outer_loop_5:                                                                      
loopB 1 ign ifc icc                                              > tp0                          X X X X ;
global match_inner_loop_5:                                                                      
loopA 1 ign ifc icc                                              > tp0                          X X X X ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 0 ;
 ign ifc icc                                                     > tp0                          0 X X 0 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 1 ;
 ign ifc icc                                                     > tp0                          0 X X 0 ;
 ign ifc icc                                                     > tp0                          0 X X 0 ;
// [JTAG] Write IR: 0xB
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
// [JTAG] /Write IR: 0xB
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
// [JTAG] Write DR: 0x1
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x1
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 7                                                         > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write IR: 0xA
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
// [JTAG] /Write IR: 0xA
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
// [JTAG] Write DR: 0x7
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x7
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 7                                                         > tp0                          0 0 X 0 ;
// JTAG-DP: R-32: name='RDBUFF'
// JTAG-AP: R-32: addr=0x00000000
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write IR: 0xB
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
// [JTAG] /Write IR: 0xB
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 1 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
// [JTAG] Write DR: 0x118000210
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x118000210
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x00000000, data=0x23000042
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x3D2
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x3D2
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x00000004, data=0x0000007a
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_5 icc ifc                         > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Match loop cycle count = 333
// Loop back around if time remaining
end_loopA match_inner_loop_5 icc                                 > tp0                          0 0 X 0 ;
end_loopB match_outer_loop_5 icc                                 > tp0                          0 0 X 0 ;
// To get here something has gone wrong, check block again to force a pattern failure
                                                                 > tp0                          0 0 X 1 ;
repeat 2                                                         > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
                                                                 > tp0                          0 0 X 0 ;
repeat 2                                                         > tp0                          0 1 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 1 X 0 ;
repeat 29                                                        > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
                                                                 > tp0                          0 0 X 1 ;
repeat 16                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
jump match_loop_end_5 icc                                        > tp0                          0 0 X 0 ;
block_0_matched_5:                                                                              
pop_loop icc                                                     > tp0                          0 0 X 0 ;
clr_fail                                                         > tp0                          0 0 X 0 ;
match_loop_end_5:                                                                               
clr_fail                                                         > tp0                          0 0 X 0 ;
return                                                           > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
global subr match_done2:                                                                        
                                                                 > tp0                          0 0 X 0 ;
// Wait for a maximum of 7.0ms
set_code 100                                                     > tp0                          0 0 X 0 ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          0 0 X 0 ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          0 0 X 0 ;
set_cpu (cpuA cpuB)                                              > tp0                          0 0 X 0 ;
loop_here_6: if (flag) jump loop_here_6                          > tp0                          0 0 X 0 ;
// Start the match loop
global match_outer_loop_7:                                                                      
loopB 1 ign ifc icc                                              > tp0                          0 0 X 0 ;
global match_inner_loop_7:                                                                      
loopA 1283 ign ifc icc                                           > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_7 icc ifc                         > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Match loop cycle count = 91
// Loop back around if time remaining
end_loopA match_inner_loop_7 icc                                 > tp0                          0 0 X 0 ;
end_loopB match_outer_loop_7 icc                                 > tp0                          0 0 X 0 ;
// To get here something has gone wrong, check block again to force a pattern failure
                                                                 > tp0                          0 0 X 1 ;
repeat 2                                                         > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
                                                                 > tp0                          0 0 X 0 ;
repeat 2                                                         > tp0                          0 1 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 1 X 0 ;
repeat 29                                                        > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
                                                                 > tp0                          0 0 X 1 ;
repeat 16                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
jump match_loop_end_7 icc                                        > tp0                          0 0 X 0 ;
block_0_matched_7:                                                                              
pop_loop icc                                                     > tp0                          0 0 X 0 ;
clr_fail                                                         > tp0                          0 0 X 0 ;
match_loop_end_7:                                                                               
clr_fail                                                         > tp0                          0 0 X 0 ;
return                                                           > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
global subr match_done3:                                                                        
                                                                 > tp0                          0 0 X 0 ;
// Wait for a maximum of 7.00s
set_code 100                                                     > tp0                          0 0 X 0 ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          0 0 X 0 ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          0 0 X 0 ;
set_cpu (cpuA cpuB)                                              > tp0                          0 0 X 0 ;
loop_here_8: if (flag) jump loop_here_8                          > tp0                          0 0 X 0 ;
// Start the match loop
global match_outer_loop_9:                                                                      
loopB 20 ign ifc icc                                             > tp0                          0 0 X 0 ;
global match_inner_loop_9:                                                                      
loopA 65535 ign ifc icc                                          > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_9 icc ifc                         > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Match loop cycle count = 91
// Loop back around if time remaining
end_loopA match_inner_loop_9 icc                                 > tp0                          0 0 X 0 ;
end_loopB match_outer_loop_9 icc                                 > tp0                          0 0 X 0 ;
// To get here something has gone wrong, check block again to force a pattern failure
                                                                 > tp0                          0 0 X 1 ;
repeat 2                                                         > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
                                                                 > tp0                          0 0 X 0 ;
repeat 2                                                         > tp0                          0 1 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 1 X 0 ;
repeat 29                                                        > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
                                                                 > tp0                          0 0 X 1 ;
repeat 16                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
jump match_loop_end_9 icc                                        > tp0                          0 0 X 0 ;
block_0_matched_9:                                                                              
pop_loop icc                                                     > tp0                          0 0 X 0 ;
clr_fail                                                         > tp0                          0 0 X 0 ;
match_loop_end_9:                                                                               
clr_fail                                                         > tp0                          0 0 X 0 ;
return                                                           > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
global subr match_done4:                                                                        
                                                                 > tp0                          0 0 X 0 ;
// Wait for a maximum of 72.00s
set_code 100                                                     > tp0                          0 0 X 0 ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          0 0 X 0 ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          0 0 X 0 ;
set_cpu (cpuA cpuB)                                              > tp0                          0 0 X 0 ;
loop_here_10: if (flag) jump loop_here_10                        > tp0                          0 0 X 0 ;
// Start the match loop
global match_outer_loop_11:                                                                     
loopB 202 ign ifc icc                                            > tp0                          0 0 X 0 ;
global match_inner_loop_11:                                                                     
loopA 65535 ign ifc icc                                          > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_11 icc ifc                        > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Match loop cycle count = 91
// Loop back around if time remaining
end_loopA match_inner_loop_11 icc                                > tp0                          0 0 X 0 ;
end_loopB match_outer_loop_11 icc                                > tp0                          0 0 X 0 ;
// To get here something has gone wrong, check block again to force a pattern failure
                                                                 > tp0                          0 0 X 1 ;
repeat 2                                                         > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
                                                                 > tp0                          0 0 X 0 ;
repeat 2                                                         > tp0                          0 1 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 1 X 0 ;
repeat 29                                                        > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
                                                                 > tp0                          0 0 X 1 ;
repeat 16                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
jump match_loop_end_11 icc                                       > tp0                          0 0 X 0 ;
block_0_matched_11:                                                                             
pop_loop icc                                                     > tp0                          0 0 X 0 ;
clr_fail                                                         > tp0                          0 0 X 0 ;
match_loop_end_11:                                                                              
clr_fail                                                         > tp0                          0 0 X 0 ;
return                                                           > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
global subr match_done5:                                                                        
                                                                 > tp0                          0 0 X 0 ;
// Wait for a maximum of 7000.00s
set_code 100                                                     > tp0                          0 0 X 0 ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          0 0 X 0 ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          0 0 X 0 ;
set_cpu (cpuA cpuB)                                              > tp0                          0 0 X 0 ;
loop_here_12: if (flag) jump loop_here_12                        > tp0                          0 0 X 0 ;
// Start the match loop
global match_outer_loop_13:                                                                     
loopB 19563 ign ifc icc                                          > tp0                          0 0 X 0 ;
global match_inner_loop_13:                                                                     
loopA 65535 ign ifc icc                                          > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 1 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
 ign ifc icc                                                     > tp0                          0 0 X 1 ;
 ign ifc icc                                                     > tp0                          0 0 X 0 ;
repeat 15                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_13 icc ifc                        > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Match loop cycle count = 91
// Loop back around if time remaining
end_loopA match_inner_loop_13 icc                                > tp0                          0 0 X 0 ;
end_loopB match_outer_loop_13 icc                                > tp0                          0 0 X 0 ;
// To get here something has gone wrong, check block again to force a pattern failure
                                                                 > tp0                          0 0 X 1 ;
repeat 2                                                         > tp0                          0 0 X 0 ;
// [JTAG] Write DR: 0x16
                                                                 > tp0                          0 0 X 0 ;
repeat 2                                                         > tp0                          0 1 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 1 X 0 ;
repeat 29                                                        > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 1 ;
// [JTAG] /Write DR: 0x16
                                                                 > tp0                          0 0 X 1 ;
repeat 16                                                        > tp0                          0 0 X 0 ;
// JTAG-AP: W-32: addr=0x0000000c, data=0x00000002
// MEM-AP(default): WR-32: addr=0x0000007a, data=0x00000002
jump match_loop_end_13 icc                                       > tp0                          0 0 X 0 ;
block_0_matched_13:                                                                             
pop_loop icc                                                     > tp0                          0 0 X 0 ;
clr_fail                                                         > tp0                          0 0 X 0 ;
match_loop_end_13:                                                                              
clr_fail                                                         > tp0                          0 0 X 0 ;
return                                                           > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
global subr match_done6:                                                                        
                                                                 > tp0                          0 0 X 0 ;
// Wait for a maximum of 15.00s
global subr match_done_0:                                                                       
set_code 100                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_1:                                                                       
set_code 101                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_2:                                                                       
set_code 102                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_3:                                                                       
set_code 103                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_4:                                                                       
set_code 104                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_5:                                                                       
set_code 105                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_6:                                                                       
set_code 106                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_7:                                                                       
set_code 107                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_8:                                                                       
set_code 108                                                     > tp0                          0 0 X 0 ;
jump call_tester                                                 > tp0                          0 0 X 0 ;
global subr match_done_9:                                                                       
set_code 109                                                     > tp0                          0 0 X 0 ;
call_tester:                                                                                    
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          0 0 X 0 ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          0 0 X 0 ;
set_cpu (cpuA cpuB)                                              > tp0                          0 0 X 0 ;
loop_here_14: if (flag) jump loop_here_14                        > tp0                          0 0 X 0 ;
// Start the match loop
global match_outer_loop_15:                                                                     
loopB 104 ign ifc icc                                            > tp0                          0 0 X 0 ;
global match_inner_loop_15:                                                                     
loopA 65535 ign ifc icc                                          > tp0                          0 0 X 0 ;
// Check if tdo is high
 ign ifc icc                                                     > tp0                          0 0 H 0 ;
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_15 icc ifc                        > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Match loop cycle count = 37
// Loop back around if time remaining
end_loopA match_inner_loop_15 icc                                > tp0                          0 0 X 0 ;
end_loopB match_outer_loop_15 icc                                > tp0                          0 0 X 0 ;
// To get here something has gone wrong, check block again to force a pattern failure
// Check if tdo is high
                                                                 > tp0                          0 0 H 0 ;
jump match_loop_end_15 icc                                       > tp0                          0 0 X 0 ;
block_0_matched_15:                                                                             
pop_loop icc                                                     > tp0                          0 0 X 0 ;
clr_fail                                                         > tp0                          0 0 X 0 ;
match_loop_end_15:                                                                              
clr_fail                                                         > tp0                          0 0 X 0 ;
return                                                           > tp0                          0 0 X 0 ;
                                                                 > tp0                          0 0 X 0 ;
global subr match_2pins_custom_jump:                                                            
                                                                 > tp0                          0 0 X 0 ;
// Wait for a maximum of 5.0us
set_code 100                                                     > tp0                          0 0 X 0 ;
// Wait for any prior failures to propagate through the pipeline
pipe_minus 1                                                     > tp0                          0 0 X 0 ;
// Now handshake with the tester to bin out and parts that have failed before they got here
enable (cpuB)                                                    > tp0                          0 0 X 0 ;
set_cpu (cpuA cpuB)                                              > tp0                          0 0 X 0 ;
loop_here_16: if (flag) jump loop_here_16                        > tp0                          0 0 X 0 ;
// Start the match loop
global match_outer_loop_17:                                                                     
loopB 1 ign ifc icc                                              > tp0                          0 0 X 0 ;
global match_inner_loop_17:                                                                     
loopA 2 ign ifc icc                                              > tp0                          0 0 X 0 ;
// Check if tdo is high
 ign ifc icc                                                     > tp0                          0 0 H 0 ;
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X 0 ;
// Branch if block condition 0 met
if (pass) jump block_0_matched_17 icc ifc                        > tp0                          0 0 X 0 ;
clr_flag (fail) icc                                              > tp0                          0 0 X 0 ;
// Check if tms is high
 ign ifc icc                                                     > tp0                          0 0 L H ;
//  Wait for the result to propagate through the pipeline
pipe_minus 1 ign ifc icc                                         > tp0                          0 0 X X ;
// Branch if block condition 1 met
if (pass) jump block_1_matched_17 icc ifc                        > tp0                          0 0 X X ;
clr_flag (fail) icc                                              > tp0                          0 0 X X ;
// Match loop cycle count = 74
// Loop back around if time remaining
end_loopA match_inner_loop_17 icc                                > tp0                          0 0 X X ;
end_loopB match_outer_loop_17 icc                                > tp0                          0 0 X X ;
// To get here something has gone wrong, check block again to force a pattern failure
// Check if tdo is high
// Check if tms is high
                                                                 > tp0                          0 0 H H ;
jump no_fails_found icc                                          > tp0                          0 0 X X ;
block_0_matched_17:                                                                             
pop_loop icc                                                     > tp0                          0 0 X X ;
clr_fail                                                         > tp0                          0 0 X X ;
jump no_fails_found                                              > tp0                          0 0 X X ;
block_1_matched_17:                                                                             
pop_loop icc                                                     > tp0                          0 0 X X ;
clr_fail                                                         > tp0                          0 0 X X ;
match_loop_end_17:                                                                              
clr_fail                                                         > tp0                          0 0 X X ;
                                                                 > tp0                          0 0 X X ;
set_code 200                                                     > tp0                          0 0 X X ;
jump match_done                                                  > tp0                          0 0 X X ;
no_fails_found:                                                                                 
set_code 201                                                     > tp0                          0 0 X X ;
match_done:                                                                                     
return                                                           > tp0                          0 0 X X ;
                                                                 > tp0                          0 0 X X ;
global subr handshake:                                                                          
set_code 100                                                     > tp0                          0 0 X X ;
set_cpu (cpuA)                                                   > tp0                          0 0 X X ;
loop_here_18: if (cpuA) jump loop_here_18                        > tp0                          0 0 X X ;
repeat 2                                                         > tp0                          0 0 X X ;
return                                                           > tp0                          0 0 X X ;
// ######################################################################
// ## Pattern complete
// ######################################################################
}                                                                                               
